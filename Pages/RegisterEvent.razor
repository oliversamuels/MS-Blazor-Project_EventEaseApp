@page "/register-event/{EventId:int}"
@using System.ComponentModel.DataAnnotations
@inject EventEaseApp.EventService EventService
@inject EventEaseApp.UserSessionService UserSessionService
@inject NavigationManager Navigation

<h3>Register for Event</h3>

@if (Event != null)
{
    <div>
        <h4>@Event.EventName</h4>
        <p>Date: @Event.Date.ToString("MMMM dd, yyyy")</p>
        <p>Location: @Event.Location</p>
    </div>

    <EditForm Model="registration" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="registration.Name" />
            <ValidationMessage For="@(() => registration.Name)" />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="registration.Email" />
            <ValidationMessage For="@(() => registration.Email)" />
        </div>
        <button type="submit" class="btn btn-primary">Register</button>
    </EditForm>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int EventId { get; set; }

    private EventEaseApp.Event? Event { get; set; }
    private Attendee registration = new Attendee();

    protected override void OnInitialized()
    {
        Event = EventService.GetEventById(EventId);
    }

    private void HandleValidSubmit()
    {
        // Start user session if not already active
        if (!UserSessionService.IsSessionActive())
        {
            UserSessionService.StartSession(registration.Name, registration.Email);
        }

        // Add attendee to event
        EventService.AddAttendee(EventId, registration);

        Navigation.NavigateTo("/");
    }
}